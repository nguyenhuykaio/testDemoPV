{"version":3,"sources":["Components/contentCoding3/SearchComponent.js","Components/contentCoding3/MainViewComponent.js","Components/contentCoding3/ListViewComponent.js","Components/Coding3.js","Components/Coding_1_2.js","App.js","serviceWorker.js","index.js"],"names":["SearchComponent","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChangeSearch","event","setState","valueSearch","target","value","handleSubmitSearch","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","_ref2","item","callBackSearch","res","wrap","_context","prev","next","sent","filter","x","name","toString","includes","alert","stop","_x","apply","arguments","state","inherits","createClass","key","_this2","react_default","createElement","style","marginTop","marginBottom","type","placeholder","className","onChange","bind","onClick","Component","MainViewComponent","opts","height","width","playerVars","autoplay","pauseVideo","videoId","YouTube","resSearch","map","id","onPlay","ListViewComponent","handleGetId","callBackVideoId","data","flexDirection","display","Coding3","componentWillMount","getData","getVideoId","_callee2","_context2","list_data","DATA","_ref3","_callee3","_context3","getResultSearch","_ref4","_callee4","dataSearch","_context4","_x2","align","SearchComponent_SearchComponent","MainViewComponent_MainViewComponent","ListViewComponent_ListViewComponent","Coding_1_2","sumArray","codingQuestion1","arrayInter","totalArray","i","length","total","options","method","Content-Type","fetch","json","list_find","result","concat","criteria","find","resultSearch","handleSubmitQ2","_ref5","_ref6","list_criteria","list_indices","arr","indices","level","Number","resultQ2","valueQ2","num","fibo","handleChange","handleSubmit","handleChangeQ2","index","App","marginLeft","BrowserRouter","Link","to","fontSize","fontWeight","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.afcb1cb2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../../conmonCSS/cssCoding3.css'\r\n\r\n\r\nexport class SearchComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            valueSearch: '',\r\n        }\r\n    }\r\n\r\n    handleChangeSearch = (event) => {\r\n        this.setState({ valueSearch: event.target.value });\r\n    }\r\n\r\n    handleSubmitSearch = async (value) => {\r\n        const { item, callBackSearch } = await this.props;\r\n        if (value != \"\") {\r\n            let res = item.filter(x => x.name.toString().includes(value.toString()))\r\n            callBackSearch(res);\r\n        }\r\n        else {\r\n            alert(\"Not Blank!\")\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ marginTop: 10, marginBottom: 10 }}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search by name!\"\r\n                    className=\"frameSearch\"\r\n\r\n                    value={this.state.valueSearch}\r\n                    onChange={this.handleChangeSearch.bind(this)} />\r\n\r\n                <button\r\n                    className=\"frameButton\"\r\n                    onClick={() => this.handleSubmitSearch(this.state.valueSearch)}\r\n                >\r\n                    Search </button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport '../../conmonCSS/cssCoding3.css'\r\nimport YouTube from 'react-youtube'\r\n\r\nexport class MainViewComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    opts = {\r\n        height: '390',\r\n        width: '640',\r\n        playerVars: {\r\n            autoplay: 1\r\n        }\r\n    };\r\n\r\n    onPlay(event) {\r\n        event.target.pauseVideo();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                {\r\n                    this.props.videoId ?\r\n                        <YouTube\r\n                            videoId={this.props.videoId}\r\n                            opts={this.opts}\r\n                            className=\"video\"\r\n                        /> :\r\n                        \"\"\r\n                }\r\n                {\r\n                    this.props.resSearch ?\r\n\r\n                        this.props.resSearch.map(item =>\r\n                            <div key={item.id}>\r\n                                <YouTube\r\n                                    videoId={item.videoId}\r\n                                    opts={this.opts}\r\n                                    onPlay={this.onPlay}\r\n                                    className=\"video\"\r\n                                />\r\n                                <p className=\"frameName\">{item.name}</p>\r\n                            </div>\r\n                        )\r\n                        :\r\n\r\n                        <p>No video</p>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport '../../conmonCSS/cssCoding3.css'\r\nimport YouTube from 'react-youtube'\r\nexport class ListViewComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.data = this.props.item;     \r\n    }\r\n\r\n    handleGetId = (videoId) => {\r\n        this.props.callBackVideoId(videoId);\r\n    }\r\n\r\n    onPlay(event) {\r\n        event.target.pauseVideo();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"frameContentList\">\r\n                {this.data.map(item =>\r\n                    <a key={item.id} style={{ flexDirection: 'row', display: 'flex', marginTop: 10 }} onClick={() => this.handleGetId(item.videoId)}>\r\n                        <YouTube\r\n                            videoId={item.videoId}\r\n                            opts={this.opts}\r\n                            onPlay={this.onPlay}\r\n                            className=\"videoList\"\r\n                        />\r\n                        <p className=\"frameName\">{item.name}</p>\r\n                    </a>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport '../conmonCSS/cssCoding3.css'\r\nimport { SearchComponent } from './contentCoding3/SearchComponent';\r\nimport { MainViewComponent } from './contentCoding3/MainViewComponent';\r\nimport { ListViewComponent } from './contentCoding3/ListViewComponent';\r\n\r\nexport class Coding3 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list_data: '',\r\n            videoId: '',\r\n            resSearch: ''\r\n        }\r\n    }\r\n\r\n    componentWillMount = async () => {\r\n        await this.getData();\r\n        await this.getVideoId();\r\n    }\r\n\r\n    getData = async () => {\r\n        await this.setState({ list_data: DATA })\r\n    }\r\n\r\n    getVideoId = async (data) => {\r\n        await this.setState({\r\n            videoId: data\r\n        })\r\n    }\r\n\r\n    getResultSearch = async (dataSearch) => {\r\n        await this.setState({ resSearch: dataSearch })\r\n          \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"frameBody\">\r\n                <div align=\"center\">\r\n                    <SearchComponent item={this.state.list_data} callBackSearch={this.getResultSearch.bind(this)} />\r\n                </div>\r\n\r\n                <div className=\"frameMainList\">\r\n                    <div className=\"frameMain\">\r\n                        <MainViewComponent videoId={this.state.videoId} resSearch={this.state.resSearch}/>\r\n                    </div>\r\n                    <div className=\"frameList\">\r\n                        <ListViewComponent item={this.state.list_data} callBackVideoId={this.getVideoId.bind(this)} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst DATA = [\r\n    {\r\n        id: 1,\r\n        name: 'Cho tui xin một vé đi tuổi thơ!',\r\n        videoId: 'I0y45gN36Vk',\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Nhạc không lời tập trung học tập',\r\n        videoId: '4P0R9dUJ370',\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Cho tui xin một vé đi tuổi thơ!',\r\n        videoId: 'I0y45gN36Vk',\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Cho tui xin một vé đi tuổi thơ!',\r\n        videoId: 'I0y45gN36Vk',\r\n    },\r\n    {\r\n        id: 5,\r\n        name: 'Nhạc không lời tập trung học tập',\r\n        videoId: '4P0R9dUJ370',\r\n    },\r\n    {\r\n        id: 6,\r\n        name: 'Cho tui xin một vé đi tuổi thơ!',\r\n        videoId: 'I0y45gN36Vk',\r\n    },\r\n]","import React, { Component } from 'react';\r\n\r\nexport class Coding_1_2 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            total: '',\r\n            value: '',\r\n            valueSearch: '',\r\n            resultSearch: '',\r\n            data: [],\r\n            valueQ2: '',\r\n            resultQ2: [],\r\n        }\r\n    }\r\n\r\n\r\n    componentWillMount = async () => {\r\n        await this.sumArray();\r\n        await this.codingQuestion1();\r\n    }\r\n\r\n    sumArray = () => {\r\n        let arrayInter = [1, 2, 3, 4, 5];\r\n        let totalArray = 0;\r\n        for (let i = 0; i < arrayInter.length; i++) {\r\n            totalArray = totalArray + arrayInter[i];\r\n        }\r\n        this.setState({\r\n            total: totalArray\r\n        })\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ value: event.target.value });\r\n    }\r\n\r\n    handleChangeSearch(event) {\r\n        this.setState({ valueSearch: event.target.value });\r\n    }\r\n\r\n    handleChangeQ2(event) {\r\n        this.setState({ valueQ2: event.target.value });\r\n    }\r\n\r\n    fibo(num) {\r\n        let res;\r\n        if (num == 1 || num == 2) {\r\n            return res = 1;\r\n        }\r\n        res = this.fibo(num - 1) + this.fibo(num - 2);\r\n        return res;\r\n    }\r\n\r\n    handleSubmit() {\r\n        if (this.state.value < 0) {\r\n            alert('Error : value > 0 : ' + this.state.value)\r\n        } else {\r\n            const num = this.state.value;\r\n            if (num === \"\") {\r\n                alert(\"Not blank\")\r\n            } else {\r\n                if (num == 0) {\r\n                    alert(\"False\")\r\n                }\r\n                else {\r\n                    alert(this.fibo(num));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    codingQuestion1 = async () => {\r\n        const options = {\r\n            'method': 'GET',\r\n            'Content-Type': 'application/json'\r\n        }\r\n        let res = await fetch('https://xbot.com.vn/standards.json', options)\r\n        if (res) {\r\n            let data = await res.json();\r\n            this.setState({\r\n                data: data\r\n            })\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n    handleSubmitSearch = async (key) => {\r\n        let { data } = await this.state\r\n        let list_find = [];\r\n        data.map(item => {\r\n            list_find = list_find.concat(item.criteria);\r\n        });\r\n\r\n        let result = list_find.find(x => x.name.toString().includes(key));\r\n        this.setState({\r\n            resultSearch: result\r\n\r\n        })\r\n    }\r\n\r\n    handleSubmitQ2 = async (key) => {\r\n\r\n        let { data } = await this.state;\r\n        let list_criteria = [];\r\n        data.map(item => {\r\n            list_criteria = list_criteria.concat(item.criteria);\r\n        });\r\n        let list_indices = [];\r\n        list_criteria.map(item => {\r\n            list_indices = list_indices.concat(item.indices);\r\n        })\r\n        if (key == 1 || key == 2 || key == 3) {\r\n            let arr = list_indices.filter(x => x.level === Number(key));\r\n            this.setState({\r\n                resultQ2: arr\r\n            })\r\n        } else {\r\n            alert(\"Input false!\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>Write a program to calculate the sum of array of integers</p>\r\n                <p>Input: arrayInter = [1, 2, 3, 4, 5]</p>\r\n                <p>{this.state.total}</p>\r\n\r\n                <p>Write a program to calculate the Nth number of the Fibonacci series.</p>\r\n\r\n                <p>  Input:    </p>\r\n                <input type=\"number\"\r\n                    placeholder=\"please number\"\r\n                    value={this.state.value}\r\n                    onChange={this.handleChange.bind(this)} />\r\n\r\n                <button onClick={this.handleSubmit.bind(this)}> Submit </button>\r\n\r\n                <p>  Coding question 1:    </p>\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"please !\"\r\n                    value={this.state.valueSearch}\r\n                    onChange={this.handleChangeSearch.bind(this)} />\r\n\r\n                <button onClick={() => this.handleSubmitSearch(this.state.valueSearch)}> Submit </button>\r\n\r\n                <p>Result  Coding question 1:  {this.state.resultSearch ? this.state.resultSearch.name : \"Not Data!\"}  </p>\r\n\r\n\r\n                <p>  Coding question 2:    </p>\r\n                <p>Level input 1,2,3</p>\r\n                <input\r\n                    type=\"number\"\r\n                    placeholder=\"please !\"\r\n                    value={this.state.valueQ2}\r\n                    onChange={this.handleChangeQ2.bind(this)} />\r\n\r\n                <button onClick={() => this.handleSubmitQ2(this.state.valueQ2)}> Submit </button>\r\n\r\n                <p>Result  Coding question 2:   </p>\r\n                <div>\r\n                    {this.state.resultQ2.map((item, index) => {\r\n                        return (\r\n                            <p key={index.toString()}>\r\n                                Name:  {item.name} -  Level: {item.level}\r\n                            </p>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\nimport { Coding3 } from './Components/Coding3';\r\nimport { Coding_1_2 } from './Components/Coding_1_2';\r\n\r\nclass App extends Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ marginLeft: 15 ,}}>\r\n\r\n        <Router>\r\n          <div>\r\n\r\n            <Link to=\"/\"><p style={{ fontSize: 20, fontWeight: 'bold', display: 'inline-block' }}>Click Coding_1_2.</p></Link>\r\n            <Link to=\"/Coding3\"> <p style={{ fontSize: 20, fontWeight: 'bold', display: 'inline-block', marginLeft: 20 }}>Click Coding-Level 3.</p></Link>\r\n\r\n            <Route exact path=\"/\" component={Coding_1_2} />\r\n            <Route path=\"/Coding3\" component={Coding3} />\r\n          </div>\r\n        </Router>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}